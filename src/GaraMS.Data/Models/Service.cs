// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace GaraMS.Data.Models;

public partial class Service
{
	public Service()
	{
		ServiceInventories = new HashSet<ServiceInventory>();
	}

	[Key]
    public int ServiceId { get; set; }

    [Required]
    [StringLength(100)]
    public string ServiceName { get; set; }

    public string Description { get; set; }

    [Column(TypeName = "decimal(18, 2)")]
    public decimal? ServicePrice { get; set; }

    [Column(TypeName = "decimal(18, 2)")]
    public decimal? InventoryPrice { get; set; }

    [Column(TypeName = "decimal(18, 2)")]
    public decimal? Promotion { get; set; }

    [Column(TypeName = "decimal(18, 2)")]
    public decimal? TotalPrice { get; set; }

    public int? EstimatedTime { get; set; }

    public bool? Status { get; set; }

    [Column(TypeName = "datetime")]
    public DateTime? CreatedAt { get; set; }

    [Column(TypeName = "datetime")]
    public DateTime? UpdatedAt { get; set; }

    public int? WarrantyPeriod { get; set; }

    public int? CategoryId { get; set; }

    [InverseProperty("Service")]
    public virtual ICollection<AppointmentService> AppointmentServices { get; set; } = new List<AppointmentService>();

    [ForeignKey("CategoryId")]
    [InverseProperty("Services")]
    public virtual Category Category { get; set; }

    [InverseProperty("Service")]
    public virtual ICollection<ServiceEmployee> ServiceEmployees { get; set; } = new List<ServiceEmployee>();

    [InverseProperty("Service")]
    public virtual ICollection<ServiceInventory> ServiceInventories { get; set; } = new List<ServiceInventory>();

    [InverseProperty("Service")]
    public virtual ICollection<ServicePromotion> ServicePromotions { get; set; } = new List<ServicePromotion>();

    [InverseProperty("Service")]
    public virtual ICollection<WarrantyHistory> WarrantyHistories { get; set; } = new List<WarrantyHistory>();

    public void UpdateTotalPrice()
    {
        // Calculate total price: ServicePrice + InventoryPrice - Promotion
        decimal servicePrice = ServicePrice ?? 0;
        decimal inventoryPrice = InventoryPrice ?? 0;
        decimal promotion = Promotion ?? 0;

        TotalPrice = servicePrice + inventoryPrice - promotion;
    }

    public void ApplyPromotionDiscount(decimal discountPercent)
    {
        decimal originalPrice = (ServicePrice ?? 0) + (InventoryPrice ?? 0);
        Promotion = (originalPrice * discountPercent) / 100;
        TotalPrice = originalPrice - Promotion;
        UpdatedAt = DateTime.Now;
    }
}
